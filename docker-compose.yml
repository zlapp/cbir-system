version: '2'

services:
  client:
    build: ./client
    container_name: client
    command: npm start
    ports:
      - '3000:3000'
    networks:
      - images

  server: 
    build: ./
    restart: unless-stopped
    container_name: server
    command: python server.py
    ports: 
      - '8081:8081'
    volumes:
      - '.:/app'
    networks:
      - images
      - esnet
  
  elasticsearch:
    build:
      context: ./
      dockerfile: Dockerfile-elastic
    ports:
      - '9200:9200'
    container_name: elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.1
    ports:
      - "5601:5601"
    networks:
      - esnet  
  
  indexer:
    build:
      context: ./
      dockerfile: ./scripts/Dockerfile
    container_name: indexer
    depends_on:
      - "elasticsearch"
    networks:
      - esnet

volumes:
  esdata:
    driver: local

networks:
  esnet:
    driver: bridge
  images:
  

  # elasticsearch:
  #   build: 
  #     context: ./
  #     dockerfile: Dockerfile-elastic
  #   environment:
  #     - cluster.name=demo-es
  #     - discovery.type=single-node
  #     - http.cors.enabled=true
  #     - http.cors.allow-credentials=true
  #     - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
  #     - http.cors.allow-origin=/https?:\/\/localhost(:[0-9]+)?/
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   ports:
  #     - "9200:9200"
  #   container_name: elasticsearch
  #   networks:
  #     - esnet

